name: Build and deploy Node.js project to Azure Function App - newlinker-fn

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read    # for checkout, download/upload artifacts
  actions: write    # to delete workflow runs

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  NODE_VERSION: '22.x'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install & build
        shell: pwsh
        run: |
          pushd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          npm install
          npm run build --if-present
          npm run test --if-present
          popd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id:     ${{ secrets.AZUREAPPSERVICE_CLIENTID_2F09DAE5092240C4ABADB97E027F324E }}
          tenant-id:     ${{ secrets.AZUREAPPSERVICE_TENANTID_C6FAC07F23D6442591BFB3783D706880 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E5303349CE0C4D85B9AC4E3807D3AD19 }}

      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name:   'newlinker-fn'
          slot-name:  'Production'
          package:    ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

  cleanup:
    name: Delete previous workflow runs
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ always() }}
    permissions:
      actions: write

    steps:
      - name: Delete all other runs of this workflow
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO:         ${{ github.repository }}
          CURRENT_RUN:  ${{ github.run_id }}
        run: |
          # Fetch up to 100 recent runs of this workflow
          runs=$(curl -sS \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO/actions/runs?workflow_id=${{ github.workflow }}&per_page=100" \
            | jq -r '.workflow_runs[].id')

          for run_id in $runs; do
            if [[ "$run_id" != "$CURRENT_RUN" ]]; then
              echo "Deleting run $run_id"
              curl -sS -X DELETE \
                   -H "Authorization: Bearer $GITHUB_TOKEN" \
                   "https://api.github.com/repos/$REPO/actions/runs/$run_id"
            fi
          done
          echo "Done cleaning up old runs."
